on:
  workflow_dispatch:

name: Build TinyTeX Bundles

env:
    GH_TOKEN: ${{ github.token }}

jobs:
  new-release:
    runs-on: ubuntu-24.04-arm
    name: Create new daily draft release
    outputs:
      tag: ${{ steps.draft.outputs.tag }}
      draft-tag: ${{ steps.draft.outputs.draft-tag }}

    steps:
      - name: Create new draft release
        id: draft
        run: |
          tag=daily
          url=$(gh release create ${tag} --draft --prerelease --title "TinyTeX daily build" --notes "(WIP) Next daily release")
          echo "draft-tag=$(echo $url | grep -o tag/[^/]*$ | cut -c 5-)" >> $GITHUB_OUTPUT
          echo "tag=${tag}" >> $GITHUB_OUTPUT

  build-linux:
    needs: [new-release]
    name: Build Bundles For Linux
    runs-on: ubuntu-24.04-arm
    outputs:
      tlmgr-version: ${{ steps.tlmgr-version.outputs.TLMGR_VERSION }}

    env:
      CTAN_REPO: https://ctan.math.illinois.edu/systems/texlive/tlnet
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Install Pandoc
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '2.19.2'

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: release
          use-public-rspm: true

      - name: Install tinytex package and its deps
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: local::., any::rmarkdown

      - name: Update all packages
        run: |
          try(update.packages(ask = FALSE, checkBuilt = TRUE))
        shell: Rscript {0}

      - name: Build texlive-local-deb
        run: |
          sudo apt install -y equivs
          wget https://cdn.jsdelivr.net/gh/scottkosty/install-tl-ubuntu/debian-control-texlive-in.txt
          equivs-build debian-*
          mv texlive-local*.deb texlive-local.deb

      - name: Build TinyTeX-0.zip & install more package
        run: |
          sed -i 's|# finished base|cp $OLDPWD/install-tl-unx.tar.gz tools/; Rscript tools/clean-tlpdb.R; tar zcf TinyTeX-0.tar.gz -C ~ .TinyTeX|' tools/install-unx.sh
          ./tools/install-unx.sh
          # tlmgr path add will add in this folder which is not on PATH by default
          # (can be checked with tlmgr options sys_bin)
          echo "$HOME/bin" >> $GITHUB_PATH
          ls -lisa "$HOME/bin"

      - name: Build TinyTeX-1.zip with new package installed
        run: |
          Rscript "tools/clean-tlpdb.R"
          tar zcf TinyTeX-1.tar.gz -C ~ .TinyTeX

      - name: Build TinyTeX.zip
        run: |
          Rscript "tools/test-basic.R"
          tar zcf TinyTeX.tar.gz -C ~ .TinyTeX

      - name: Build TinyTeX-2 (scheme-full)
        run: |
          Rscript "tools/build-scheme-full.R"
          tar Jcf TinyTeX-2.tar.gz -C ~ .TinyTeX

      - name: Export Regex file
        run: |
          Rscript "tools/export-regex.R"
          tar zcf regex.tar.gz regex.json

      - name: Build *nix installer bundle
        working-directory: tools
        run: |
          cp install-base.sh install.sh
          echo "tlmgr install $(cat pkgs-custom.txt | tr '\n' ' ')" >> install.sh
          tar zcf ../installer-unix.tar.gz install-tl-unx.tar.gz tinytex.profile install.sh

      - name: Get Version information for daily build
        id: tlmgr-version
        run: |
          echo "TLMGR_VERSION<<EOFTLMGR" >> $GITHUB_OUTPUT
          ~/bin/tlmgr version | sed -n '1p;3p' >> $GITHUB_OUTPUT
          echo "EOFTLMGR" >> $GITHUB_OUTPUT

      - name: Test Installation script
        env:
          TINYTEX_INSTALLER: TinyTeX-0
        run: ./tools/install-bin-unix.sh

      - run: ls -lisa

      - name: Upload bundles
        # this specific action is used at some issues have been observe with gh while uploading assets
        # This allows to not fail the workflow on upload, but retry a few time
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          retry_wait_seconds: 10
          command: |
            gh release upload ${{needs.new-release.outputs.draft-tag}} TinyTeX-0.tar.gz TinyTeX-1.tar.gz TinyTeX.tar.gz TinyTeX-2.tar.gz installer-unix.tar.gz regex.tar.gz texlive-local.deb --clobber
